#!/bin/zsh

# Only for interactive shells.
[[ -o interactive ]] || exit 0

main() {
    # Auto-start TMUX when in SSH session.
    if hash tmux 2>/dev/null && [ "$SSH_CONNECTION" ] && [ -z "$TMUX" ]; then
        tmux has-session -t ssh &>/dev/null && exec tmux attach -t ssh || exec tmux new -s ssh
    fi

    # Function to run as sourced instead of normal executed shell script
    function adm() { source "$ADM/adm.sh" "$@" ; }

    FRAMEWORK=oh-my-zsh
    case "${FRAMEWORK}" in
        prezto)
            local rc="${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
            [ -f "${rc}" ] && source "${rc}"
            ;;

        oh-my-zsh)
            local rc="${DOTFILES}/shell/oh-my-zshrc"
            [ -f "${rc}" ] && source "${rc}"
            ;;
    esac

    # loads funcs, aliases and shell vars
    rc=$DOTFILES"/shell/rc.sh"
    [ -f "$rc" ] && . "$rc"

    # runs all setup's st_rc target
    adm rc --recursive "${DOTFILES}"

    # Machine local confs
    try_source ~/.zshrc_local

    return 0
}

profile_startup() {
    # http://zsh.sourceforge.net/Doc/Release/Prompt-Expansion.html
    PS4=$'%D{%M%S%.} %N:%i> '
    mkdir -p /tmp/zsh_profile
    exec 3>&2 2>/tmp/zsh_profile/startup.$$.log
    setopt xtrace prompt_subst

    main || return 1

    unsetopt xtrace
    exec 2>&3 3>&-
    for f in /tmp/zsh_profile/startup.*.log; do
        echo $f
        parse_zsh_startup.py $f
        echo
    done

    return 0
}

main

return 0
