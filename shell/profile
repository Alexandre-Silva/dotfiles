#!/usr/bin/env bash
# -*- mode: sh -*-

# ~/.profile: executed by the command interpreter for login shells.
# This file is not read by bash(1), if ~/.bash_profile or ~/.bash_login
# exists.
# see /usr/share/doc/bash/examples/startup-files for examples.
# the files are located in the bash-doc package.

# the default umask is set in /etc/profile; for setting the umask
# for ssh logins, install and configure the libpam-umask package.
#umask 022

################################################################################
# HELPERS
################################################################################

# Assigns and exports the 1st value to variable `var` from the list `values` which exists in path
# $1 var: Name of the variable
# $2.. values: The list of values to test and set
function prio_assign {
    local args=( "$@" )
    local var="$1"
    local values=( "${args[@]:1}" )

    for v in "${values[@]}" ; do
        if hash "${v}" &>/dev/null ; then
            export ${var}="${v}"
            break
        fi
    done
}

################################################################################
# CONFIGS
################################################################################

# set PATH so it includes user's private bin if it exists
if [ -d "$HOME/.bin" ] ; then
    PATH="$HOME/.bin:$PATH"
fi

editor_prio=( nvim vim vi nano )
if hash emacs &>/dev/null; then
    editor_prio=( et "${editor_prio[@]}" )
fi

prio_assign EDITOR "${editor_prio[@]}"
prio_assign BROWSER firefox chrome-stable chromium
export VISUAL="${EDITOR}"
export PAGER='less'
export TERMCMD='termite'

export GIT_HOME="$HOME/.git"

[ -d "$HOME/dotfiles" ] && export DOTFILES="$HOME/dotfiles"

# defines de Linux distribution of the current machine. E.g. Arch
export DISTRIBUTION=""
hash lsb_release &>/dev/null && DISTRIBUTION="$(lsb_release --id --short)"

export ADM="$DOTFILES/shell/lib/ADM"

# executes all st_profiles in all setup.sh's
. "$ADM/adm.sh" profiles --quiet

# if running bash
if [ -n "$BASH_VERSION" ]; then
    # include .bashrc if it exists
    bashrc="$HOME/.bashrc"
    if [ -f "$bashrc" ]; then
        # shellcheck source=/dev/null
        source "$bashrc"
    fi
fi
